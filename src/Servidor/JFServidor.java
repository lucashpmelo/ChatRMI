/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servidor;

import Cliente.JFClientes;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author UTFPR
 */
public class JFServidor extends javax.swing.JFrame {

    /**
     * Creates new form JFServidor
     */
    
    String nome = "ServidorRMI";
    int port = 1099;
    I_RMI o;
    Registry registry = LocateRegistry.createRegistry(port);
    DefaultListModel modelListaUsuarios = new DefaultListModel();
    DefaultListModel modelListaChats = new DefaultListModel();
    DefaultListModel modelListaArquivos = new DefaultListModel();    
    
    static boolean flagList = true;
    
    public JFServidor() throws RemoteException {
        initComponents();
        o = new RMI_Impl();
        registry.rebind(nome, o);
        lblNome.setText("Nome: " + nome);
        lblPort.setText("Port: " + port);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listUsuarios = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listChats = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        listArquivos = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        btnBanir = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listUsuarios.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jScrollPane1.setViewportView(listUsuarios);

        listChats.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jScrollPane2.setViewportView(listChats);

        listArquivos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jScrollPane3.setViewportView(listArquivos);

        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Usuários:");

        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Chats:");

        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Arquivos:");

        lblNome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNome.setForeground(new java.awt.Color(0, 102, 102));
        lblNome.setText("Nome: ");

        lblPort.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPort.setForeground(new java.awt.Color(0, 102, 102));
        lblPort.setText("Port:");

        btnBanir.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnBanir.setForeground(new java.awt.Color(0, 102, 102));
        btnBanir.setText("Banir Usuário");
        btnBanir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBanirActionPerformed(evt);
            }
        });

        btnLiberar.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnLiberar.setForeground(new java.awt.Color(0, 102, 102));
        btnLiberar.setText("Liberar Usuário");
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("UTFPRChat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBanir, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLiberar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblNome)
                            .addComponent(lblPort)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLiberar)
                    .addComponent(btnBanir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBanirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBanirActionPerformed
        String usuario = listUsuarios.getSelectedValue();
        
        try {
            o.banirUsuario(usuario);
        } catch (RemoteException ex) {
            Logger.getLogger(JFServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBanirActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        String usuario = listUsuarios.getSelectedValue();
        
        try {
            o.liberarUsuario(usuario);
        } catch (RemoteException ex) {
            Logger.getLogger(JFServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLiberarActionPerformed

    public void atualiza() throws RemoteException {

        Thread thread;
        thread = new Thread(new Runnable() {
            
            @Override
            public void run() {
                    ArrayList<String> listaUsuarios = new ArrayList<>();
                    ArrayList<String> auxListaUsuarios = new ArrayList<>();
                    ArrayList<String> listaChats = new ArrayList<>();
                    ArrayList<String> listaArquivos = new ArrayList<>();                    
                    
                    auxListaUsuarios.add(nome);
                    
                    listUsuarios.setModel(modelListaUsuarios);
                    listChats.setModel(modelListaChats);
                    listArquivos.setModel(modelListaArquivos);
                while (true) {                    
                    
                    try {
                        listaUsuarios = o.retornaUsuarios();
                        listaChats = o.retornaChats();
                        listaArquivos = o.retornaListaArquivos();
                    } catch (RemoteException ex) {
                        Logger.getLogger(JFServidor.class.getName()).log(Level.SEVERE, null, ex);
                    }                    
                    
                    
                    
                    int listaSize;                    
                    
                    if(flagList){
                        listaSize = listaUsuarios.size();

                        modelListaUsuarios.clear();

                        for (int i = 0; i < listaSize; i++) {
                            modelListaUsuarios.addElement(listaUsuarios.get(i));
                        }
                        
                        try {
                            o.addUsuarios(nome, false);
                        } catch (RemoteException ex) {
                            Logger.getLogger(JFServidor.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    
                    auxListaUsuarios = listaUsuarios;
                    
                    listaSize = listaChats.size();
                    modelListaChats.clear();
                    
                    for (int i = 0; i < listaSize; i++) {
                        modelListaChats.addElement(listaChats.get(i));
                    }
                    
                    listaSize = listaArquivos.size();
                    modelListaArquivos.clear();
                    
                    for (int i = 0; i < listaSize; i++) {
                        modelListaArquivos.addElement(listaArquivos.get(i));
                    }
                    
                    try {                        
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JFClientes.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        thread.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFServidor().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(JFServidor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBanir;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPort;
    private javax.swing.JList<String> listArquivos;
    private javax.swing.JList<String> listChats;
    private javax.swing.JList<String> listUsuarios;
    // End of variables declaration//GEN-END:variables
}
